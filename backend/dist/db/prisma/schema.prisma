// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  paid     Expense[] @relation("PaidBy")
  splits   ExpenseSplit[]
}

model Expense {
  id          Int            @id @default(autoincrement())
  amount      Decimal        @db.Decimal(10, 2)
  description String
  category    String
  paidBy      Person         @relation("PaidBy", fields: [paidById], references: [id])
  paidById    Int
  splits      ExpenseSplit[]
  createdAt   DateTime       @default(now())
}

model ExpenseSplit {
  id         Int      @id @default(autoincrement())
  expense    Expense  @relation(fields: [expenseId], references: [id], onDelete: Cascade)
  expenseId  Int
  person     Person   @relation(fields: [personId], references: [id], onDelete: Cascade)
  personId   Int
  splitType  SplitType
  value      Decimal  @db.Decimal(10, 2) // value meaning depends on splitType
}

enum SplitType {
  equal
  percentage
  exact
}

enum Category {
  Food
  Travel
  Rent
  Utilities
  Entertainment
  Groceries
  Other
}